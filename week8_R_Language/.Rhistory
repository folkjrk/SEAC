# save dataset
write.csv(pts, " /Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/normalpriceitaly.scv")
###input
data = read.csv("/Users/astroxjrk/Desktop/SEAC/week8_R_Language/winemag-data-130k-v2.csv",
stringsAsFactors = FALSE)
###input
data = read.csv("/Users/astroxjrk/Desktop/SEAC/week8_R_Language/winemag-data-130k-v2.csv",
stringsAsFactors = FALSE)
## read data
# 1 filter data to be italy only
italy_2 <- data[data$country == "Italy",]
# 2 filter region 1 to be ("Sicilia", "Etna")
italy_2 <- italy_2[italy_2$region_1 %in% c("Sicilia", "Etna"),]
# 3 code to show dimension of filter data
print(dim(italy_2))
# 4 create new column that is the conversion of price from euro to usd (1.02)
italy_2$price_usd <- italy_2$price * 1.02
# 5 create new column indicates price range, if price in usd > mean(priceusd)
# record "expensive" , then "Normal"
italy_2$price.range <-ifelse(italy_2$price_usd > mean(italy_2$price_usd, na.rm = TRUE),
"Expensive","Normal")
print(italy_2$price.range)
# 6  filter normal price wines only, plot the histogram of price converted and points
pts <- italy_2[italy_2$price.range == "Normal",]
hist(pts$price_usd)
max(pts$price_usd, na.rm=TRUE)
min(pts$price_usd, na.rm=TRUE)
median(pts$price_usd, na.rm=TRUE)
print(max(pts$price_usd, na.rm=TRUE))
text <- pasteO("Max:", max(pts$price_usd, na.rm=TRUE))
print(text)
# save dataset
write.csv(pts, " /Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/normalpriceitaly.scv")
###input
data = read.csv("/Users/astroxjrk/Desktop/SEAC/week8_R_Language/winemag-data-130k-v2.csv",
stringsAsFactors = FALSE)
###input
data = read.csv("/Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2.csv",
stringsAsFactors = FALSE)
## read data
# 1 filter data to be italy only
italy_2 <- data[data$country == "Italy",]
# 2 filter region 1 to be ("Sicilia", "Etna")
italy_2 <- italy_2[italy_2$region_1 %in% c("Sicilia", "Etna"),]
# 3 code to show dimension of filter data
print(dim(italy_2))
# 4 create new column that is the conversion of price from euro to usd (1.02)
italy_2$price_usd <- italy_2$price * 1.02
# 5 create new column indicates price range, if price in usd > mean(priceusd)
# record "expensive" , then "Normal"
italy_2$price.range <-ifelse(italy_2$price_usd > mean(italy_2$price_usd, na.rm = TRUE),
"Expensive","Normal")
print(italy_2$price.range)
# 6  filter normal price wines only, plot the histogram of price converted and points
pts <- italy_2[italy_2$price.range == "Normal",]
hist(pts$price_usd)
max(pts$price_usd, na.rm=TRUE)
min(pts$price_usd, na.rm=TRUE)
median(pts$price_usd, na.rm=TRUE)
print(max(pts$price_usd, na.rm=TRUE))
text <- pasteO("Max:", max(pts$price_usd, na.rm=TRUE))
print(text)
# save dataset
write.csv(pts, " /Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/normalpriceitaly.scv")
# save dataset
write.csv(pts, " /Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/normalpriceitaly.csv")
### save dataframe
write.csv(italy, "/Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/italy_r.csv", row.names=FALSE)
# save dataset
write.csv(pts, " /Users/astroxjrk/Desktop/SEAC/week8_R_Language/normalpriceitaly.csv")
# save dataset
write.csv(pts, " /Users/astroxjrk/Desktop/SEAC/week8_R_Language/normalpriceitaly.csv")
#libary dplyr
# The easiest way to get dplyr is to install the whole tidyverse:
install.packages("tidyverse")
# Alternatively, install just dplyr:
install.packages("dplyr")
#Call dplyr
library("dplyr")
raw_data <- read.csv("~/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2.csv")
View(raw_data)
#get data
View(data)
source("~/Desktop/SEAC/week8_R_Language/2_Lib_dplyr.R")
#get data
raw_data <- read.csv("/Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data <- read.csv("/Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data <- read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data <- read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data <- read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data <- read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data = read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2", stringsAsFactors = FALSE)
#get data
raw_data = read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2.csv", stringsAsFactors = FALSE)
#select
select(data, contains("Country"))
#Call dplyr
library("dplyr")
#get data
raw_data = read.csv("Users/astroxjrk/Desktop/SEAC/week8_R_Language/data/winemag-data-130k-v2.csv", stringsAsFactors = FALSE)
View(data)
View(raw_data)
#select
select(data, contains("Country"))
#select
select(data, contains("Country"))
#select
select(data, contains("Country"))
#select
select(raw_data, contains("Country"))
select(raw_data, contains(c("Country", "point", "price")))
subset_data <-select(raw_data, contains(c("Country", "point", "price")))
subset_data <- filter(subset_data, point>=90)
dim(raw_data)
dim(subset_data)
subset_data <- filter(subset_data, point>=90)
subset_data <- filter(subset_data, points>=90)
dim(subset_data)
#mutate
subset_data <- mutate(subset_data)
#mutate
subset_data <- mutate(subset_data, mean(subset_data$price))
#mutate
subset_data <- mutate(subset_data, mean(subset_data$price, na.rm = TRUE))
#mutate
subset_data <- mutate(subset_data,
avg_price = mean(subset_data$price, na.rm = TRUE))
subset_data_2 <- raw_data %>%
select("country", "points", "price")
subset_data_2 <- raw_data %>%
select("country", "points", "price") %>%
filter(points>=90) %>%
mutate(avg_price=mean(price, na.rm=TRUE))
mutate(price_div = price - avg_price)
subset_data_2 <- raw_data %>%
select("country", "points", "price") %>%
filter(points>=90) %>%
mutate(avg_price=mean(price, na.rm=TRUE))
subset_data_2 <- raw_data %>%
select("country", "points", "price") %>%
filter(points>=90) %>%
mutate(avg_price=mean(price, na.rm=TRUE)) %>%
mutate(price_div = price - avg_price)
mutate(price_range=ifelse(price_usd> mean(price_usd, na.rm =TRUE),
"Expensive","Normal"))
#pipe operator for italy
italy_3 <- raw_data %>%
filter(country== 'Italy') %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(price_usd=price*1.02)
#pipe operator for italy
italy_3 <- raw_data %>%
filter(country== 'Italy') %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(italy_3$price_usd=price*1.02)
#pipe operator for italy
italy_3 <- raw_data %>%
filter(country== 'Italy') %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(price_usd=price*1.02)
View(raw_data)
italy_3 <- raw_data %>%
filter(country=="Italy") %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(price_usd=price*1.02)
## ggplot2
# The easiest way to get ggplot2 is to install the whole tidyverse:
install.packages("tidyverse")
# Alternatively, install just ggplot2:
install.packages("ggplot2")
# Or the development version from GitHub:
# install.packages("devtools")
devtools::install_github("tidyverse/ggplot2")
italy_3 <- raw_data %>%
filter(country=="Italy") %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(price_usd=price*1.02)
italy_3 <- raw_data %>%
filter(country=="Italy") %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(price_usd=price*1.02)
italy_3 <- raw_data %>%
filter(country=="Italy") %>%
filter(region_1 %in% c("Sicilia", "Etna")) %>%
mutate(price_usd=price*1.02) %>%
mutate(price.range=ifelse(price_usd> mean(price_usd, na.rm =TRUE),
"Expensive","Normal"))
library("ggplot2")
data_c <- data
plt <- ggplot(data_c)
plt <- ggplot(data_c, aes(x=price, y= point))
plt
plt <- ggplot(data_c, aes(x=price, y= points))
plt
plt <- ggplot(data_c, aes(x=price, y= points)) +
geom_point)_
plt <- ggplot(data_c, aes(x=price, y= points)) +
geom_point)
plt <- ggplot(data_c, aes(x=price, y= points)) +
geom_point())
plt <- ggplot(data_c, aes(x=price, y= points)) +
geom_point()
plt <- ggplot(data_c, aes(x=price, y= points)) +
geom_point(aes(colour= country))
data_c <- data
plt <- ggplot(data_c, aes(x=price, y= points)) +
geom_point(aes(colour= country))
View(data_c)
## ggplot2
# The easiest way to get ggplot2 is to install the whole tidyverse:
install.packages("tidyverse")
# Alternatively, install just ggplot2:
install.packages("ggplot2")
# Or the development version from GitHub:
# install.packages("devtools")
devtools::install_github("tidyverse/ggplot2")
